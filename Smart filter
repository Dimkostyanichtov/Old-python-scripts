for i in xrange(len(channel_1)):
    signal.append(channel_1[i] + channel_2[i])    # Складываем измеренный полезный сигнал и сигнал шума
    
m = 0.0008   # Задаём переменные
h = 0.0001
rpt = 1

b = np.zeros(len(signal))    #  Формируем массив нулей длинной равной количетву точек измеренного сигнала
x = np.zeros(len(signal))    #  Формируем массив нулей длинной равной количетву точек измеренного сигнала

for i in xrange(rpt):   #   Начало самого внешнего цикла по числу повторов процедуры фильтрации
    
    t = []
    s = []
    
    for j in xrange(len(signal)):   

        y = 0.0
        for k in xrange(1, len(signal) -1 ): x[k] = x[k-1]   # Сдвиг сигнала помехи по рабочему массиву
        x[1] = signal[j]   # Загрузка сигнала помехи в рабочий массив
        for k in xrange(len(signal)): y += x[k]*b[k]    # Вычисляем сумму по всем весовым коэффициентам для сигнала помехи
        if y > 1.0:     
            y = 1.0
        elif y < (-1.0):
            y = (-1.0)
        s.append(signal[j] - y)  #  Вычитаем вычисленный отсчёт сигнала помехи из исходного сигнала
        if s[j] > 1.0:
            s[j] = 1.0
        elif s[j] < (-1.0):
            s[j] = (-1.0)
        if j == 0:
            t.append(h)
        else:
            t.append(t[j - 1] + h)
        #  Вычисляем новые значения весовых коэффициентов b
        c = 2*m*s[j]
        for k in xrange(len(signal)):
            b[k] += x[k]*c 
